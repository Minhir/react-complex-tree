{
  "env": {
    "browser": true,
    "es2021": true,
    "jest": true
  },
  "extends": [
    "plugin:prettier/recommended",
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react-hooks/recommended",
    "airbnb",
    "airbnb-typescript",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 12,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": ["react", "@typescript-eslint", "prettier"],
  "rules": {
    "linebreak-style": ["error", "unix"],
    "quotes": ["error", "single"],
    "semi": ["error", "always"],
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/ban-types": "off",
    "@typescript-eslint/no-non-null-asserted-optional-chain": "off",
    "react/display-name": "off",
    "react/prop-types": "off",
    "react-hooks/exhaustive-deps": [
      "error",
      {
        "additionalHooks": "(useSideEffect)|(useMemoizedObject)"
      }
    ],
    "import/prefer-default-export": "off",
    "react/jsx-props-no-spreading": "off",
    "no-nested-ternary": "off",
    "@typescript-eslint/no-shadow": "off",
    "import/no-extraneous-dependencies": "off",
    "class-methods-use-this": "off",
    "react/require-default-props": "off",
    "no-restricted-syntax": "off",
    "react/function-component-definition": "off",

    // Dependency cycles come from contexts, context providers and context hooks being in the same file.
    // Could be solved, but also doesn't really bring any harm to keep as is.
    "import/no-cycle": "off"
  },
  "ignorePatterns": ["**/lib", "**/webpack.config.ts", "**/*.js"]
}
